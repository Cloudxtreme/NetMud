@model NetMud.Models.GameAdmin.AddEditInanimateDataViewModel
@{
    ViewBag.Title = "Edit Inanimate";
}

<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    <section id="newCharacterForm">
        @using (Html.BeginForm("EditInanimateData", "GameAdmin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" name="id" id="id" value="@Model.DataObject.ID" />
            <div class="form-group">
                @Html.LabelFor(m => m.NewName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NewName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="display: block; padding-bottom: 10px;">
                    @Html.LabelFor(m => m.InanimateContainerNames, new { @class = "col-md-2 control-label" })
                    <a href="#" id="addInanimateContainerRow" style="padding: 10px;">Add another...</a>
                </div>
                <div id="inanimateContainerRows" style="display: block;">
                    @foreach (var container in Model.DataObject.InanimateContainers)
                    {
                        <div class="col-md-10" style="padding-left: 10px;">
                            <span style="padding: 10px; float:left;">Name: </span><input id="InanimateContainerNames" name="InanimateContainerNames" style="float:left; margin-top: 10px;" type="text" value="@container.Name">
                            <span style="padding: 10px; float:left;">Weight:</span><input id="InanimateContainerWeights" name="InanimateContainerWeights" style="float:left; margin-top: 10px;" type="text" value="@container.CapacityWeight.ToString()">
                            <span style="padding: 10px; float:left;">Volume:</span><input id="InanimateContainerVolumes" name="InanimateContainerVolumes" style="float:left; margin-top: 10px;" type="text" value="@container.CapacityVolume.ToString()">
                            <a href="#" class="removeContainerRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a>
                        </div>
                    }
                </div>
            </div>
            <br class="clearfix" />
            <div class="form-group">
                <div style="display: block; padding-bottom: 10px;">
                    @Html.LabelFor(m => m.MobileContainerNames, new { @class = "col-md-2 control-label" })
                    <a href="#" id="addMobileContainerRow" style="padding: 10px;">Add another...</a>
                </div>
                <div id="mobileContainerRows" style="display: block;">
                    @foreach (var container in Model.DataObject.MobileContainers)
                    {
                        <div class="col-md-10" style="padding-left: 10px;">
                            <span style="padding: 10px; float:left;">Name: </span><input id="MobileContainerNames" name="MobileContainerNames" style="float:left; margin-top: 10px;" type="text" value="@container.Name">
                            <span style="padding: 10px; float:left;">Weight:</span><input id="MobileContainerWeights" name="MobileContainerWeights" style="float:left; margin-top: 10px;" type="text" value="@container.CapacityWeight.ToString()">
                            <span style="padding: 10px; float:left;">Volume:</span><input id="MobileContainerVolumes" name="MobileContainerVolumes" style="float:left; margin-top: 10px;" type="text" value="@container.CapacityVolume.ToString()">
                            <a href="#" class="removeContainerRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a>
                        </div>
                    }
                </div>
            </div>
            <br class="clearfix" />
            <div class="form-group">
                @Html.LabelFor(m => m.DimensionalModelId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("DimensionalModelId", Model.ValidModels.Select(rl =>
                                                                new SelectListItem() { Text = rl.Name, Value = rl.ID.ToString() })
                                                                , htmlAttributes: new { id = "DimensionalModelId", Style = "padding: 7px; float:left; margin-top: 10px;" })
                    @Html.ValidationMessageFor(m => m.DimensionalModelId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DimensionalModelHeight, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.DimensionalModelHeight, new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.DimensionalModelHeight, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DimensionalModelLength, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.DimensionalModelLength, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DimensionalModelLength, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DimensionalModelWidth, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.DimensionalModelWidth, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DimensionalModelWidth, "", new { @class = "text-danger" })
                </div>
            </div>
            <br class="clearfix" />
            <div class="form-group">
                <div style="display: block; padding-bottom: 10px;">
                    @Html.LabelFor(m => m.ModelPartNames, new { @class = "col-md-2 control-label" })
                </div>
                <div id="modelPartRows" style="display: block;">
                    @foreach (var container in Model.DataObject.Model.Composition)
                    {
                        <div class="col-md-10" style="padding-left: 10px;">
                            <span style="padding: 10px; float:left;">Part Name:</span><input disabled="disabled" id="ModelPartNames" name="ModelPartNames" style="float:left; margin-top: 10px;" type="text" value="@container.Key">
                            <span style="padding: 10px; float:left;">Material: </span>@Html.DropDownList("ModelPartMaterials", Model.ValidMaterials.Select(rl =>
                                                                                            new SelectListItem() { Text = rl.Name, Value = rl.ID.ToString(), Selected = rl.Equals(container.Value) })
                                                                                            , htmlAttributes: new { id = "ModelPartMaterials", Style = "padding: 7px; float:left; margin-top: 10px;" })
                        </div>
                    }
                </div>
            </div>
            <br class="clearfix" />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Commit" class="btn btn-default" style="color: green; border-color: cadetblue;" />
                    @Html.ActionLink("Cancel", "ManageInanimateData", "GameAdmin", new { @class = "btn btn-default", @style = "color: orange; border-color: red;" })
                </div>
            </div>
        }
    </section>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#addInanimateContainerRow").click(function () {
                $("#inanimateContainerRows").append(
                    '<div class="col-md-10" style="padding-left:10px;"><span style="padding: 10px; float:left;">Name: </span><input id="InanimateContainerNames" name="InanimateContainerNames" type="text" value="" style="float:left; margin-top: 10px;"><span style="padding: 10px; float:left;">Weight:</span><input id="InanimateContainerWeights" name="InanimateContainerWeights" type="text" value="" style="float:left; margin-top: 10px;"><span style="padding: 10px; float:left;">Volume:</span><input id="InanimateContainerVolumes" name="InanimateContainerVolumes" type="text" value="" style="float:left; margin-top: 10px;"><a href="#" class="removeContainerRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a></div>'
                );

                $(".removeContainerRow").click(function () {
                    $(this).parent().remove();
                    return false;
                });
                return false;
            });

            $("#addMobileContainerRow").click(function () {
                $("#mobileContainerRows").append(
                    '<div class="col-md-10" style="padding-left:10px;"><span style="padding: 10px; float:left;">Name: </span><input id="MobileContainerNames" name="MobileContainerNames" type="text" value="" style="float:left; margin-top: 10px;"><span style="padding: 10px; float:left;">Weight:</span><input id="MobileContainerWeights" name="MobileContainerWeights" type="text" value="" style="float:left; margin-top: 10px;"><span style="padding: 10px; float:left;">Volume:</span><input id="MobileContainerVolumes" name="MobileContainerVolumes" type="text" value="" style="float:left; margin-top: 10px;"><a href="#" class="removeContainerRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a></div>'
                );

                $(".removeContainerRow").click(function () {
                    $(this).parent().remove();
                    return false;
                });
                return false;
            });

            $(".removeContainerRow").click(function () {
                $(this).parent().remove();
                return false;
            });
        });
    </script>
}