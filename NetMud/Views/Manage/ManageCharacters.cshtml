@model NetMud.Models.ManageCharactersViewModel
@{
    ViewBag.Title = "Manage your characters";
}

<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    if (Model.authedUser.GameAccount.Characters.Count() > 0)
    {
        <h4>Registered Characters</h4>
        <table class="table">
            <tbody>
                @foreach (var ch in Model.authedUser.GameAccount.Characters)
                {
                    <tr>
                        <td>@ch.Name</td>
                        <td>@ch.SurName</td>
                        <td>@ch.Gender</td>
                        <td>@ch.GamePermissionsRank.ToString()</td>
                        <td>
                            @using (Html.BeginForm("RemoveCharacter", "Manage"))
                            {
                                @Html.AntiForgeryToken()
                                <div>
                                    @Html.Hidden("ID", ch.ID)
                                    <input type="submit" class="btn btn-default" value="Remove" title="Delete this character" />
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <section id="newCharacterForm">
        @using (Html.BeginForm("AddCharacter", "Manage", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>New Character</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.NewName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NewName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewSurName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NewSurName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewSurName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewGender, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.NewGender, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewGender, "", new { @class = "text-danger" })
                </div>
            </div>
            if (User.IsInRole("Admin"))
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.ChosenRole, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("ChosenRole", Model.ValidRoles.Select(rl =>
                            new SelectListItem() { Text = rl.ToString(), Value = rl.ToString() })
                            , htmlAttributes: new { id = "chosenRole", Style = "padding: 7px;" })
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }
    </section>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}